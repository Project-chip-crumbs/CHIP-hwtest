#!/bin/sh

#turn on wifi once before to avoid console spamming....
dmesg -n3

# Make sure this is a C.H.I.P.
if [ "$(cat /proc/device-tree/model)" = "NextThing C.H.I.P." ]; then
  MODEL=CHIP
  VMBYTES=128M
elif [ "$(cat /proc/device-tree/model)" = "NextThing Crumb" ]; then
  MODEL=PRO
  VMBYTES=96M # CHIPPro does not have 2x128M free memory
else
  status=$?
  echo "This is not a C.H.I.P. ... exiting"
  exit $status
fi


TESTS_FAILED=0
TESTS_PASSED=0

echo -e "\n"

echo "############################################################"
echo "# [ CHIP HW TEST ]                                         #"
echo "############################################################"

if [ -e log.txt ]; then rm log.txt; fi

# Enable radios if necessary
if [ -x /usr/sbin/rfkill ]; then
  /usr/sbin/rfkill unblock all
fi

echo -e "\n"

echo -n -e "# Turn on wlan0..."
if ip link set wlan0 up; then
  TESTS_PASSED=$((TESTS_PASSED + 1))
  echo "OK";
else
  TESTS_FAILED=$((TESTS_FAILED + 1))
  echo "ERROR";
fi

echo -n -e "# Turn on wlan1..."
if ip link set wlan1 up; then
  TESTS_PASSED=$((TESTS_PASSED + 1))
  echo "OK";
else
  TESTS_FAILED=$((TESTS_FAILED + 1))
  echo "ERROR";
fi

echo -n -e "# Hardware list..."
if lshw -disable usb -short | sed -e 's/^.\{10\}//' | diff - /usr/lib/hwtest/lshw_ref.txt >>log.txt; then
  TESTS_PASSED=$((TESTS_PASSED + 1))
	echo "# Hardware list...OK";
else
  TESTS_FAILED=$((TESTS_FAILED + 1))
  echo "# Hardware list...ERROR";
fi

echo -e -n "# I2C bus 0..."
if [[ "$(i2cdetect -y 0 | grep 30 | cut -c17-18)" == "UU" ]]; then
  TESTS_PASSED=$((TESTS_PASSED + 1))
	echo "OK"
else
  TESTS_FAILED=$((TESTS_FAILED + 1))
	echo "ERROR"
fi

echo -e -n "# I2C bus 1..."
if [[ "$(i2cdetect -y 1 | grep 00 | cut -c5-6)" == "  " ]]; then
  TESTS_PASSED=$((TESTS_PASSED + 1))
	echo "OK"
else
  TESTS_FAILED=$((TESTS_FAILED + 1))
	echo "ERROR"
fi

if [ "${MODEL}" = "CHIP" ]; then
  echo -e -n "# I2C bus 2..."
  if [[ "$(i2cdetect -y 2 | grep 30 | cut -c29-30)" == "UU" ]]; then
    TESTS_PASSED=$((TESTS_PASSED + 1))
    echo "OK"
  else
    TESTS_FAILED=$((TESTS_FAILED + 1))
    echo "ERROR"
  fi
fi

echo -n -e "# testing AXP209 on I2C bus 0..."
AXP_PRESENT="$(dmesg |grep -o 'axp20x 0-0034')"
if [[ ! -z "${AXP_PRESENT}" ]]; then
  TESTS_PASSED=$((TESTS_PASSED + 1))
	echo "OK"
else
  TESTS_FAILED=$((TESTS_FAILED + 1))
	echo "ERROR"
fi
#./battery.sh
#./power.sh

if [ "${MODEL}" = "CHIP" ]; then
  echo -e -n "# GPIO expander test..."
  if [ "$(cat /sys/bus/i2c/devices/i2c-2/2-0038/name)" = "pcf8574a" ]; then
    TESTS_PASSED=$((TESTS_PASSED + 1))
    echo "OK"
  else
    TESTS_FAILED=$((TESTS_FAILED + 1))
    echo "ERROR"
  fi
fi


#echo -e -n "# testing NAND write speed 1K block size..."
#if dd if=/dev/zero of=/NAND_write_speed bs=1k count=256k 2>&1 |sed -e 's/,.*//g' |diff - /usr/lib/hwtest/dd_ref0.txt >>log.txt; then
#  TESTS_PASSED=$((TESTS_PASSED + 1))
#	echo "OK"
#else
#  TESTS_FAILED=$((TESTS_FAILED + 1))
#	echo "ERROR"
#fi
#
#echo -e -n "# testing NAND write speed 16K block size..."
#if dd if=/dev/zero of=/NAND_write_speed bs=16k count=16k 2>&1 |sed -e 's/,.*//g' |diff - /usr/lib/hwtest/dd_ref1.txt >>log.txt; then
#  TESTS_PASSED=$((TESTS_PASSED + 1))
#	echo "OK"
#else
#  TESTS_FAILED=$((TESTS_FAILED + 1))
#	echo "ERROR"
#fi

## usb stick write test - WARNING will *DESTROY* contents on it
#if [ -b /dev/sda ];
#then
#  echo -e "\n * USB device /dev/sda found - type yes to *DESTROY* it's contents"
#  read confirmation
#  if [ "${confirmation}" == "yes" ];
#  then
#    echo -e "\n * testing USB write speed 1K block size"
#    dd if=/dev/zero of=/dev/sda bs=1k count=256k
#    echo -e "\n * testing USB write speed 4K block size"
#    dd if=/dev/zero of=/dev/sda bs=4k count=64k
#  fi
#fi

echo -n -e "# Doing 10s stress test..."
if stress -q --cpu 8 --io 4 --vm 2 --vm-bytes ${VMBYTES} --hdd 2 --hdd-bytes 100000 --timeout 10s; then
  TESTS_PASSED=$((TESTS_PASSED + 1))
	echo "OK"
else
  TESTS_FAILED=$((TESTS_FAILED + 1))
	echo "ERROR"
fi

#### NOTE: Covered by lshw already
#echo -e -n "# Wifi enumeration test..."
#if iw dev|grep -v addr |grep -v ssid |diff - /usr/lib/hwtest/wifi_ref0.txt >>log.txt; then
#  TESTS_PASSED=$((TESTS_PASSED + 1))
#	echo "OK"
#else
#  TESTS_FAILED=$((TESTS_FAILED + 1))
#	echo "ERROR"
#fi

#echo -e -n "# Searching for mobile hotspot..."
#if iw dev wlan0 scan |grep -q "        SSID: NTC 4G OMG"; then
#  TESTS_PASSED=$((TESTS_PASSED + 1))
#	echo "OK"
#else
#  TESTS_FAILED=$((TESTS_FAILED + 1))
#	echo "ERROR"
#fi

#### NOTE: Disable for now, needs compile work
#echo -e -n "# Checking bit flips on NAND... "
#nand_test.sh
#
#echo -e -n "# Checking bad blocks on NAND... "
#bbcheck.sh


if [ "$TESTS_FAILED" -eq "0" ]; then
  echo "### ALL TESTS PASSED ###" >&2
else
  echo "### ${TESTS_FAILED} TESTS FAILED ###" >&2
fi
